{"version":3,"sources":["logo.svg","components/Keyboard.tsx","components/NotationService.ts","components/Notation.tsx","core/PianoNote.ts","core/PianoService.ts","core/SoundService.ts","App.tsx","serviceWorker.ts","theme.tsx","index.tsx"],"names":["module","exports","pianoKeys","whiteKeyId","whiteKeyName","blackKeyId","blackKeyName","blackKeyNameAlt","Keyboard","props","keys","map","key","className","onClick","onKeyPress","showNames","id","NotationService","maxNotes","vrvToolkit","spacingNotesXml","this","verovio","toolkit","i","push","toString","notes","trepleNotesXml","bassNotesXml","length","noteXml","octave","name","accidental","restXml","notationXML","join","renderData","pageWidth","border","scale","adjustPageHeight","notationService","Notation","svg","renderNotation","dangerouslySetInnerHTML","__html","PianoNote","keyId","noteId","fullname","RangeError","toLowerCase","parseInt","accidentalSymbol","toUpperCase","PianoService","pianoKeyMap","pianoNoteMap","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Object","forEach","note","hasOwnProperty","Error","alternateNote","lowerOctave","upperOctave","naturalNotes","n","SoundService","context","buffers","initialize","console","log","AudioContext","window","webkitAudioContext","loadSounds","e","alert","source","createBufferSource","buffer","connect","destination","start","soundPath","process","loadBuffer","path","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","error","onerror","send","useStyles","makeStyles","theme","createStyles","grow","flexGrow","notation","paddingTop","spacing","paddingBottom","textAlign","color","palette","text","secondary","keyboard","pianoService","soundService","App","classes","React","useState","setNotes","options","setOptions","addNote","AppBar","position","Toolbar","src","logo","alt","FormControlLabel","control","Switch","checked","onChange","event","target","value","label","Button","Container","fixed","Grid","container","item","xs","Paper","elevation","getNoteByKeyId","playNote","Boolean","location","hostname","match","createMuiTheme","primary","teal","orange","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37f39eb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7360bcc0.svg\";","import React, { useState } from 'react';\r\nimport './Keyboard.css';\r\n\r\ntype PianoKey = {\r\n  whiteKeyId: number;\r\n  whiteKeyName?: string;\r\n  blackKeyId?: number;\r\n  blackKeyName?: string;\r\n  blackKeyNameAlt?: string;\r\n}\r\n\r\nconst pianoKeys: PianoKey[] = [\r\n  { whiteKeyId: 16, whiteKeyName: \"C\" },\r\n  { whiteKeyId: 18, whiteKeyName: \"D\", blackKeyId: 17, blackKeyName: \"D\\u266D\", blackKeyNameAlt: \"C\\u266F\" },\r\n  { whiteKeyId: 20, whiteKeyName: \"E\", blackKeyId: 19, blackKeyName: \"E\\u266D\", blackKeyNameAlt: \"D\\u266F\" },\r\n  { whiteKeyId: 21, whiteKeyName: \"F\" },\r\n  { whiteKeyId: 23, whiteKeyName: \"G\", blackKeyId: 22, blackKeyName: \"G\\u266D\", blackKeyNameAlt: \"F\\u266F\" },\r\n  { whiteKeyId: 25, whiteKeyName: \"A\", blackKeyId: 24, blackKeyName: \"A\\u266D\", blackKeyNameAlt: \"G\\u266F\" },\r\n  { whiteKeyId: 27, whiteKeyName: \"B\", blackKeyId: 26, blackKeyName: \"B\\u266D\", blackKeyNameAlt: \"A\\u266F\" },\r\n  { whiteKeyId: 28, whiteKeyName: \"C\" },\r\n  { whiteKeyId: 30, whiteKeyName: \"D\", blackKeyId: 29, blackKeyName: \"D\\u266D\", blackKeyNameAlt: \"C\\u266F\" },\r\n  { whiteKeyId: 32, whiteKeyName: \"E\", blackKeyId: 31, blackKeyName: \"E\\u266D\", blackKeyNameAlt: \"D\\u266F\" },\r\n  { whiteKeyId: 33, whiteKeyName: \"F\" },\r\n  { whiteKeyId: 35, whiteKeyName: \"G\", blackKeyId: 34, blackKeyName: \"G\\u266D\", blackKeyNameAlt: \"F\\u266F\" },\r\n  { whiteKeyId: 37, whiteKeyName: \"A\", blackKeyId: 36, blackKeyName: \"A\\u266D\", blackKeyNameAlt: \"G\\u266F\" },\r\n  { whiteKeyId: 39, whiteKeyName: \"B\", blackKeyId: 38, blackKeyName: \"B\\u266D\", blackKeyNameAlt: \"A\\u266F\" },\r\n  { whiteKeyId: 40, whiteKeyName: \"C\" },\r\n  { whiteKeyId: 42, whiteKeyName: \"D\", blackKeyId: 41, blackKeyName: \"D\\u266D\", blackKeyNameAlt: \"C\\u266F\" },\r\n  { whiteKeyId: 44, whiteKeyName: \"E\", blackKeyId: 43, blackKeyName: \"E\\u266D\", blackKeyNameAlt: \"D\\u266F\" },\r\n  { whiteKeyId: 45, whiteKeyName: \"F\" },\r\n  { whiteKeyId: 47, whiteKeyName: \"G\", blackKeyId: 46, blackKeyName: \"G\\u266D\", blackKeyNameAlt: \"F\\u266F\" },\r\n  { whiteKeyId: 49, whiteKeyName: \"A\", blackKeyId: 48, blackKeyName: \"A\\u266D\", blackKeyNameAlt: \"G\\u266F\" },\r\n  { whiteKeyId: 51, whiteKeyName: \"B\", blackKeyId: 50, blackKeyName: \"B\\u266D\", blackKeyNameAlt: \"A\\u266F\" },\r\n  { whiteKeyId: 52, whiteKeyName: \"C\" },\r\n  { whiteKeyId: 54, whiteKeyName: \"D\", blackKeyId: 53, blackKeyName: \"D\\u266D\", blackKeyNameAlt: \"C\\u266F\" },\r\n  { whiteKeyId: 56, whiteKeyName: \"E\", blackKeyId: 55, blackKeyName: \"E\\u266D\", blackKeyNameAlt: \"D\\u266F\" },\r\n  { whiteKeyId: 57, whiteKeyName: \"F\" },\r\n  { whiteKeyId: 59, whiteKeyName: \"G\", blackKeyId: 58, blackKeyName: \"G\\u266D\", blackKeyNameAlt: \"F\\u266F\" },\r\n  { whiteKeyId: 61, whiteKeyName: \"A\", blackKeyId: 60, blackKeyName: \"A\\u266D\", blackKeyNameAlt: \"G\\u266F\" },\r\n  { whiteKeyId: 63, whiteKeyName: \"B\", blackKeyId: 62, blackKeyName: \"B\\u266D\", blackKeyNameAlt: \"A\\u266F\" },\r\n  { whiteKeyId: 64, whiteKeyName: \"C\" }\r\n];\r\n\r\ninterface IProps {\r\n  showNames: boolean;\r\n  onKeyPress(keyId: number): void;\r\n};\r\n\r\nconst Keyboard: React.FC<IProps> = (props) => {\r\n\r\n  const keys = pianoKeys.map((key) =>\r\n    <li key={key.whiteKeyId}>\r\n      <div className=\"anchor\" onClick={() => props.onKeyPress(key.whiteKeyId)}>{props.showNames && key.whiteKeyName}</div>\r\n      {key.blackKeyId && <span className=\"blackkey\" onClick={() => props.onKeyPress(key.blackKeyId!)}>\r\n        {props.showNames && <span>{key.blackKeyName}</span>}\r\n        {props.showNames && <span>{key.blackKeyNameAlt}</span>}\r\n      </span>}\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <div id=\"p-wrapper\">\r\n      <ul id=\"piano\">\r\n        {keys}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Keyboard;","import { PianoNote } from '../core/PianoNote';\r\n\r\ndeclare var verovio: any;\r\n\r\nexport class NotationService {\r\n\r\n  private maxNotes: number = 32;\r\n  private vrvToolkit: any;\r\n  private spacingNotesXml: string[] = [];\r\n\r\n  constructor() {\r\n    this.vrvToolkit = new verovio.toolkit();\r\n\r\n    // create hidden notes to ensure the staff is drawn full width. Notes are hidden via css.\r\n    for (let i = 0; i < this.maxNotes; i++) {\r\n      this.spacingNotesXml.push(`<note xml:id=\"rest-hidden-${i.toString()}\" dur=\"4\" oct=\"6\" pname=\"c\" stem.dir=\"up\" />`);\r\n    }\r\n  }\r\n\r\n  renderNotation(notes: PianoNote[]): string {\r\n\r\n    let trepleNotesXml: string[] = [];\r\n    let bassNotesXml: string[] = [];\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n\r\n      let noteXml = `<note xml:id=\"${i}\" dur=\"4\" oct=\"${notes[i].octave}\" pname=\"${notes[i].name}\" ${notes[i].accidental ? 'accid=\"' + notes[i].accidental + '\"' : ''}></note>`;\r\n      let restXml = `<rest xml:id=\"rest-${i}\" dur=\"4\" oct=\"${notes[i].octave}\" pname=\"${notes[i].name}\" ${notes[i].accidental ? 'accid=\"' + notes[i].accidental + '\"' : ''}></rest>`;\r\n\r\n      if (notes[i].octave > 3) {\r\n        trepleNotesXml.push(noteXml);\r\n        bassNotesXml.push(restXml);\r\n      }\r\n      else {\r\n        trepleNotesXml.push(restXml);\r\n        bassNotesXml.push(noteXml);\r\n      }\r\n    }\r\n\r\n    let notationXML =\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://relaxng.org/ns/structure/1.0\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\r\n    <mei xmlns=\"http://www.music-encoding.org/ns/mei\" meiversion=\"3.0.0\">\r\n      <music>\r\n          <body>\r\n                <mdiv>\r\n                  <score>\r\n                      <scoreDef>\r\n                            <staffGrp symbol=\"brace\" label=\"\">\r\n                              <staffDef clef.shape=\"G\" clef.line=\"2\" n=\"1\" lines=\"5\" lyric.size=\"80%\" />\r\n                              <staffDef clef.shape=\"F\" clef.line=\"4\" n=\"2\" lines=\"5\" lyric.size=\"80%\" />\r\n                            </staffGrp>\r\n                      </scoreDef>\r\n                      <section>\r\n                            <measure>\r\n                              <staff n=\"1\">\r\n                                  <layer n=\"1\" xml:id=\"layer-treple\">\r\n                                        ${ trepleNotesXml.join(\"\")}\r\n                                  </layer>\r\n                                  <layer xml:id=\"layer-spacing\" n=\"2\">\r\n                                        ${ this.spacingNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                              <staff n=\"2\">\r\n                                  <layer xml:id=\"layer-bass\" n=\"1\">\r\n                                        ${ bassNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                            </measure>\r\n                      </section>\r\n                  </score>\r\n                </mdiv>\r\n          </body>\r\n      </music>\r\n    </mei>`;\r\n\r\n    let options = {\r\n      // make these options in the notationservice\r\n      pageWidth: 1900,\r\n      border: 20,\r\n      scale: 60,\r\n      adjustPageHeight: 1\r\n    };\r\n\r\n    let renderedNotation = this.vrvToolkit.renderData(notationXML, options);\r\n    return renderedNotation;\r\n  }\r\n}","import React from \"react\";\r\nimport { NotationService } from './NotationService';\r\nimport { PianoNote } from '../core/PianoNote';\r\nimport './Notation.css';\r\n\r\n\r\ninterface IProps {\r\n  notes: PianoNote[]\r\n};\r\n\r\nconst notationService = new NotationService();\r\n\r\nconst Notation: React.FC<IProps> = (props) => {\r\n\r\n  const svg = notationService.renderNotation(props.notes)\r\n\r\n  return (\r\n    <div id=\"notation\" className=\"container\" dangerouslySetInnerHTML={{ __html: svg }} />\r\n  );\r\n\r\n}\r\n\r\nexport default Notation;\r\n","export class PianoNote {\r\n  readonly octave: number;\r\n  readonly name: string;\r\n  readonly accidental?: string;  // f | s\r\n  readonly fullname: string;\r\n\r\n  constructor(readonly keyId: number, readonly noteId: string) {\r\n\r\n    if (keyId < 16 || keyId > 64) {\r\n      throw new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (noteId.length < 2 || noteId.length > 3) {\r\n      throw new RangeError(\"noteId is invalid\");\r\n    }\r\n\r\n    this.name = noteId[0].toLowerCase();\r\n    this.octave = parseInt(noteId[1]);\r\n\r\n    let accidentalSymbol = \"\";\r\n\r\n    if (noteId.length === 3) {\r\n      this.accidental = noteId[2];\r\n\r\n      if (this.accidental === \"s\") {\r\n        accidentalSymbol = '\\u266F';\r\n      }\r\n      else if (this.accidental === \"f\") {\r\n        accidentalSymbol = '\\u266D';\r\n      }\r\n    }\r\n\r\n    this.fullname = this.name.toUpperCase() + accidentalSymbol;\r\n  }\r\n\r\n}\r\n","import { PianoNote } from './PianoNote';\r\n\r\nexport class PianoService {\r\n\r\n  private pianoKeyMap: any = {};\r\n  private pianoNoteMap: any = {};\r\n\r\n  constructor() {\r\n\r\n    this.pianoKeyMap = {\r\n      16: [\"c2\"],\r\n      17: [\"c2s\", \"d2f\"],\r\n      18: [\"d2\"],\r\n      19: [\"d2s\", \"e2f\"],\r\n      20: [\"e2\"],\r\n      21: [\"f2\"],\r\n      22: [\"f2s\", \"g2f\"],\r\n      23: [\"g2\"],\r\n      24: [\"g2s\", \"a2f\"],\r\n      25: [\"a2\"],\r\n      26: [\"a2s\", \"b2f\"],\r\n      27: [\"b2\"],\r\n      28: [\"c3\"],\r\n      29: [\"c3s\", \"d3f\"],\r\n      30: [\"d3\"],\r\n      31: [\"d3s\", \"e3f\"],\r\n      32: [\"e3\"],\r\n      33: [\"f3\"],\r\n      34: [\"f3s\", \"g3f\"],\r\n      35: [\"g3\"],\r\n      36: [\"g3s\", \"a3f\"],\r\n      37: [\"a3\"],\r\n      38: [\"a3s\", \"b3f\"],\r\n      39: [\"b3\"],\r\n      40: [\"c4\"],\r\n      41: [\"c4s\", \"d4f\"],\r\n      42: [\"d4\"],\r\n      43: [\"d4s\", \"e4f\"],\r\n      44: [\"e4\"],\r\n      45: [\"f4\"],\r\n      46: [\"f4s\", \"g4f\"],\r\n      47: [\"g4\"],\r\n      48: [\"g4s\", \"a4f\"],\r\n      49: [\"a4\"],\r\n      50: [\"a4s\", \"b4f\"],\r\n      51: [\"b4\"],\r\n      52: [\"c5\"],\r\n      53: [\"c5s\", \"d5f\"],\r\n      54: [\"d5\"],\r\n      55: [\"d5s\", \"e5f\"],\r\n      56: [\"e5\"],\r\n      57: [\"f5\"],\r\n      58: [\"f5s\", \"g5f\"],\r\n      59: [\"g5\"],\r\n      60: [\"g5s\", \"a5f\"],\r\n      61: [\"a5\"],\r\n      62: [\"a5s\", \"b5f\"],\r\n      63: [\"b5\"],\r\n      64: [\"c6\"]\r\n    };\r\n\r\n    // create pianoNoteMap, mapping noteIds to keyIds.\r\n    Object.keys(this.pianoKeyMap).forEach(\r\n      keyId => this.pianoKeyMap[keyId].forEach(\r\n        (note: any) => this.pianoNoteMap[note] = keyId)\r\n    );\r\n  }\r\n\r\n  getNote(noteId: string): PianoNote {\r\n    if (this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid noteId.\");\r\n    }\r\n  }\r\n\r\n  getNoteByKeyId(keyId: number): PianoNote {\r\n    if (this.pianoKeyMap.hasOwnProperty(keyId)) {\r\n      let noteId = this.pianoKeyMap[keyId][0]; // default to first note for keyId\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n  }\r\n\r\n  getAlternateNote(noteId: string): PianoNote {\r\n\r\n    if (!this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      throw new Error(\"Invalid noteId\");\r\n    }\r\n\r\n    let alternateNote: PianoNote | undefined;\r\n    let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n    let notes = this.pianoKeyMap[keyId];\r\n\r\n    if (notes.length > 1) {\r\n      if (notes[0] === noteId) {\r\n        alternateNote = new PianoNote(keyId, notes[1]);\r\n      }\r\n      else {\r\n        alternateNote = new PianoNote(keyId, notes[0]);;\r\n      }\r\n    }\r\n\r\n    return alternateNote!;\r\n  }\r\n\r\n  getAllNoteIds(): string[] {\r\n    return Object.keys(this.pianoNoteMap);\r\n  }\r\n\r\n  getAllNaturalNoteIds(lowerOctave: number = 2, upperOctave = 6): string[] {\r\n    let naturalNotes: string[] = [];\r\n\r\n    Object.keys(this.pianoNoteMap).forEach(note => {\r\n      if (note.length === 2) {\r\n        let n = parseInt(note[1]);\r\n        if (n >= lowerOctave && n <= upperOctave) {\r\n          naturalNotes.push(note);\r\n        }\r\n      }\r\n    })\r\n\r\n    return naturalNotes;\r\n  }\r\n\r\n}\r\n","export class SoundService {\r\n\r\n  private context: AudioContext | undefined;\r\n  private buffers: {} = {};\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // load wav files for each piano key.\r\n    console.log(\"initializing audio and loading sounds\");\r\n    try {\r\n      // Hack to support AudioContext on iOS\r\n      if (typeof AudioContext !== 'undefined') {\r\n        this.context = new AudioContext();\r\n      } else if (typeof (window as any).webkitAudioContext !== 'undefined') {\r\n        this.context = new (window as any).webkitAudioContext();\r\n      }\r\n      this.loadSounds();\r\n    }\r\n    catch (e) {\r\n      alert(\"Web Audio API is not supported in this browser\");\r\n    }\r\n  }\r\n\r\n  playNote(keyId: number): void {\r\n    if (keyId < 16 || keyId > 64) {\r\n      new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (this.buffers.hasOwnProperty(keyId)) {\r\n      console.log(\"SoundService: playing key=\" + keyId);\r\n      let source = this.context!.createBufferSource();\r\n      source.buffer = (this.buffers as any)[keyId];\r\n      source.connect(this.context!.destination);\r\n      source.start(0);\r\n    }\r\n    else {\r\n      console.log(\"Audio not loaded for key=\" + keyId);\r\n    }\r\n  }\r\n\r\n  private loadSounds(): void {\r\n    // load the wav files for each piano key.\r\n    for (let i = 16; i < 65; i++) {\r\n      var soundPath = process.env.PUBLIC_URL + `/sounds/${i}.wav`;\r\n      this.loadBuffer(i.toString(), soundPath);\r\n    }\r\n  }\r\n\r\n\r\n  private loadBuffer(name: string, path: string): void {\r\n\r\n    console.log(`loadBuffer: name=${name}, path=${path}`);\r\n\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", path, true);\r\n    request.responseType = \"arraybuffer\";\r\n\r\n    let context = this.context!;\r\n    let buffers = (this.buffers as any);\r\n\r\n    request.onload = function () {\r\n      context.decodeAudioData(\r\n        request.response,\r\n        function (buffer) {\r\n          if (!buffer) {\r\n            alert('error decoding file data: ' + path);\r\n            return;\r\n          }\r\n          console.log('audio loaded for: ', name);\r\n          buffers[name] = buffer;\r\n        },\r\n        function (error) {\r\n          console.error('decodeAudioData error', error);\r\n        }\r\n      );\r\n    }\r\n    request.onerror = function () {\r\n      alert('BufferLoader: XHR error');\r\n    }\r\n    request.send();\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport logo from './logo.svg'\r\nimport green from '@material-ui/core/colors/green';\r\nimport Keyboard from './components/Keyboard';\r\nimport Notation from './components/Notation';\r\nimport { PianoNote } from './core/PianoNote';\r\nimport { PianoService } from './core/PianoService'\r\nimport { SoundService } from './core/SoundService'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    notation: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    keyboard: {\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(3),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\nconst maxNotes = 32;\r\n\r\nconst pianoService = new PianoService();\r\nconst soundService = new SoundService();\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [notes, setNotes] = React.useState<PianoNote[]>([]);\r\n  const [options, setOptions] = React.useState({ showNames: false });\r\n\r\n  const handleKeyPress = (keyId: number) => {\r\n    console.log(keyId);\r\n    const note = pianoService.getNoteByKeyId(keyId);\r\n    soundService.playNote(keyId);\r\n    addNote(note)\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    setNotes([]);\r\n  }\r\n\r\n  const addNote = (note: PianoNote) => {\r\n    if (notes.length === maxNotes) {\r\n      setNotes([\r\n        note\r\n      ])\r\n    }\r\n    else {\r\n      setNotes([\r\n        ...notes,\r\n        note\r\n      ])\r\n    }\r\n  }\r\n\r\n  const handleOptionsChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setOptions({ ...options, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={logo} alt=\"Logo\" />\r\n          <div className={classes.grow} />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={options.showNames}\r\n                onChange={handleOptionsChange('showNames')}\r\n                value=\"showNames\"\r\n                color=\"default\"\r\n              />\r\n            }\r\n            label=\"Show Names\"\r\n          />\r\n          <Button color=\"inherit\" onClick={handleClearClick}>Clear</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container fixed>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.notation} elevation={1}>\r\n              <Notation notes={notes} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.keyboard}>\r\n              <Keyboard showNames={options.showNames} onKeyPress={handleKeyPress} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import red from '@material-ui/core/colors/red';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: teal,\r\n    secondary: orange,\r\n    background: {\r\n      default: teal[50],\r\n    },\r\n  },\r\n});\r\n\r\n// https://material-ui.com/customization/color/\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}